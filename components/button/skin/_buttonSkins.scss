/*doc
---
parent: button
name: buttonSkins
title: Button Styles
test: true
---

Button                                                  | Class                | Description
-------------------------------------------------       | -----------------    | -----------
<button class="btn btnDefault">Default</button>         | `btn btnDefault`     | This is what buttons look like, this is the go to button style.
<button class="btn btnPrimary">Primary</button>         | `btn btnPrimary`     | Use this button as the primary call to action
<button class="btn btnDanger">Delete</button>           | `btn btnDanger`      | This button is for delete actions, these actions should also have a confirmation dialog
<button class="btn btnDisabled">Disabled</button>       | `btn btnDisabled`    | I'm afraid I can't let you do that.
<button class="btn btnLink">Link</button>               | `btn btnLink`        | Easily align a secondary action with your primary button.
<button class="btn btnFacebook">Facebook</button>       | `btn btnFacebook`    | Use this button for Facebook connect. Adding "iconFacebook" is recommended, see <a href="#icon">Icons</a>.

[[[plugin:css-test
<ul>
  <li><button class="btn btnDefault">Default</button>
  <li><button class="btn btnPrimary">Primary</button>
  <li><button class="btn btnDanger">Delete</button>
  <li><button class="btn btnDisabled">Disabled</button>
  <li><button class="btn btnLink">Link</button>
  <li><button class="btn btnFacebook">Facebook</button>
</ul>
]]]

*/

// @param $name                 Name of this skin. Will build the classname as `.btnSkinname`.
// @param $backgroundStartColor Color to start at the top of the gradient.
// @param $backgroundEndColor   Color to end at the bottom of the gradient.
// @param $textColor            Color of the button text.
// @param $boxShadow            Color of the button box shadow.


// ButtonSkin Mixin
@mixin buttonSkin($name, $backgroundColor, $backgroundHoverColor, $textColor: null, $textShadow: null, $boxShadow: null) {

  $borderShadow: adjust-lightness($backgroundHoverColor, -12%);

  .btn#{$name},
  a.btn#{$name} { //need to add anchor selector to override default link color
    border: 1px $borderShadow solid;
    background: $backgroundColor;

    @if $textColor != null {
      color: $textColor;
    }

    @if $textShadow != null {
      text-shadow: $textShadow;
    }

    @if $boxShadow != null {
      @include box-shadow(
        0 1px 0 $boxShadow
      );
    }
  }

  // Hover
  .btn#{$name}Hover,
  .btn#{$name}:hover,
  .btn#{$name}:focus {
    background: $backgroundHoverColor;
  }

  // Active
  .btn#{$name}:active,
  .btnActive {
    position: relative;
    top: 1px;
    @include box-shadow(
      inset 0 3px 7px rgba(0, 0, 0, 0.1),
      0 1px 2px rgba(0, 0, 0, 0.05)
    );
  }
}


// ButtonSkins Mixin
@mixin ooButtonSkins() {

  @include buttonSkin(
    "Default",
    $btnBackgroundColorDefault,
    $btnBackgroundHoverDefault,
    $btnTextColorDefault,
    $btnTextShadowDefault,
    $btnBoxShadowDefault
  );

  // Declares `btnPrimary`
  @include buttonSkin(
    "Primary",
    $btnBackgroundColorPrimary,
    $btnBackgroundHoverPrimary,
    $altCommonBtnTextColor,
    $altCommonBtnTextShadow,
    $btnBoxShadowPrimary
  );

  // Declares `btnDanger`
  @include buttonSkin(
    "Danger",
    $btnBackgroundColorDanger,
    $btnBackgroundHoverDanger,
    $altCommonBtnTextColor,
    $altCommonBtnTextShadow,
    $btnBoxShadowPrimary
  );

  // Declares `btnFacebook`
  @include buttonSkin(
    "Facebook",
    $btnBackgroundColorFacebook,
    $btnBackgroundHoverFacebook,
    $altCommonBtnTextColor,
    $altCommonBtnTextShadow,
    $btnBoxShadowFacebook
  );

  //Override the btnPrimary class to make it work with the new version of the home page
  .newTXL .btnPrimary{
    border: 0;
    background: $btnBackgroundColorFlat;
    color: $altCommonBtnTextColor;
    text-transform:uppercase;
    @include border-radius($borderRadiusXSml);
    letter-spacing: $letterSpacingSml;
  }

  .newTXL .btnPrimary:hover {
    background: $btnBackgroundHoverFlat;
    color: $altCommonBtnTextColor;
  }

  .btn[disabled],
  .btn[disabled]:hover,
  .btn[disabled]:focus
  .btn[disabled]:active,
  .btnDisabled,
  a.btnDisabled, //need to add anchor selector to override default link color
  .btnDisabled:hover,
  .btnDisabled:focus,
  .btnDisabled:active {
    border-width: 0;
    background: $btnBackgroundColorDisabled;
    color: $btnTextColorDisabled;
    text-shadow: $btnTextShadowDisabled;
    cursor: default;
  }

  .btn[disabled]:active,
  .btnDisabled:active {
    position: static;
    color: $btnTextColorDisabled;
    box-shadow: none;
  }
}
