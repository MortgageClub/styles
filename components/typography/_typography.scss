/*doc

---
title: Typography
name: typography
category: Base CSS
---

## Headings
All html headings `<h1>` through `<h6>` are available. You can also apply classes `.h1` through `.h8` to any typography element to override the default size.
(`h7` is a class that sets the `font-size` to our smallest available reading size. `h8` is a super special class that should only be used for auxiliary text such as disclaimers or credits for data sources.)

```html_example
<h1 class="h0">h0 Homepage Heading</h1>
<h1>h1.Heading</h1>
<h2>h2.Heading</h2>
<h3>h3.Heading</h3>
<h4>h4.Heading</h4>
<h5>h5.Heading</h5>
<h6>h6.Heading</h6>
<h6 class="h3">h6 with .h3</h6>
<h1 class="h7">Small text (h1 with h7)</h1>
<p class="h8">This is data is provided by the Kitten Foundation &copy; with permission, mew.</h8>
```
*/


// Set to true for debug
$debugTypography: false;


// px to rem Converter
@function calculateRem($size) {
  $remSize: $size / $rootFontSize; //Font size you set on <html> element
  @return #{$remSize}rem;
}


// Font Size with rem
@mixin fontSize($size) {
  font-size: $size;
}

// Typography Mixin
@mixin ooTypography() {

  .h0 {
    @include fontSize(48px);
    line-height: 1.4;
    margin: 5px 0;
  }

  .h1 {
    @include fontSize(36px);
    line-height: 1.3;
    margin: 5px 0;
  }

  .h2 {
    @include fontSize(28px);
    line-height: 1.4;
    margin: 5px 0;
  }

  .h3 {
    @include fontSize(24px);
    line-height: 1.4;
    margin: 5px 0;
  }

  .h4 {
    @include fontSize(20px);
    line-height: 1.4;
    margin: 5px 0;
  }

  .h5 {
    @include fontSize(16px);
    line-height: 1.5;
    margin: 5px 0;
  }

  .h6 {
    @include fontSize(14px);
    line-height: 1.5;
    margin: 5px 0;
  }

  .h7 {
    @include fontSize(12px);
    line-height: 1.6;
    margin: 5px 0;
  }

  .h8 { // Meant for auxilary text like disclaimers or credits only
    @include fontSize(9px);
    line-height: 1.2;
  }
}


// Debug
@if $debugTypography {
  body {
    background: {
      color: #fff;
      image: -webkit-linear-gradient(transparent 50%, rgba(0,0,0,.1) 50%);
      size: $baseLineHeight*2 $baseLineHeight*2;
    }
  }
}
