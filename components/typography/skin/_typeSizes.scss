/*doc

---
title: Typography
name: typography
category: Base CSS
---

## Headings
All html headings `<h1>` through `<h6>` are available. You can also apply classes `.h1` through `.h8` to any typography element to override the default size.
(`h7` is a class that sets the `font-size` to our smallest available reading size. `h8` is a super special class that should only be used for auxiliary text such as disclaimers or credits for data sources.)

```html_example
<h1 class="h0">h0 Homepage Heading</h1>
<h1>h1.Heading</h1>
<h2>h2.Heading</h2>
<h3>h3.Heading</h3>
<h4>h4.Heading</h4>
<h5>h5.Heading</h5>
<h6>h6.Heading</h6>
<h6 class="h3">h6 with .h3</h6>
<h1 class="h7">Small text (h1 with h7)</h1>
<p class="h8">This is data is provided by the Kitten Foundation &copy; with permission, mew.</h8>
```
*/

$typeSizes: (
  ("h0", 48px, 1.4),
  ("h1", 36px, 1.3),
  ("h2", 25px, 1.4),
  ("h3", 22px, 1.4),
  ("h4", 18px, 1.4),
  ("h5", 16px, 1.5),
  ("h6", 14px, 1.5),
  ("h7", 12px, 1.6),
  ("h8", 9px, 1.2)
);
@mixin ooTypeSizes {
  @each $triplet in $typeSizes {
    $name: nth($triplet, 1);
    $size: nth($triplet, 2);
    $lineHeight: nth($triplet, 3);
    // Generate the .h1, .h2, etc. helper classes
    @include ooTypography($name, $size, $lineHeight);

    // Generate the actual h1, h2, etc. styles
    @if($name != "h0" and $name != "h8") {
      #{$name} {
        @extend %#{$name};
        color: $headingTextColor;
      }
    }
  }
}
