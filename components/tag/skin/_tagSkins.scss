/*doc

---
category: Components
parent: tag
name: tagSkins
title: Tag Skins
author: August Flanagan
test: true
---

Class                  | Description
---------------------- | -----------------
`tagBasic`             | basic gray style
`tagAction`            | basic interactivity
`tagActionHighlight`   | Apply link style color
`tagClose`             | basic close interactivity (applies `hideFully` class to the element when clicked)
`tagCloseHighlight`     | matches tagActionHighlight style

Events                 | Description
---------------------- | -----------------
`tag:action`           | triggered when an element with the class `tagAction` is clicked
`tag:close`            | triggered when an element with the class `tagClose` is clicked

<br>
The simplest way to use a tag is like this. **This version is purely presentational and has no interactivity.**

```html_example
  <span class="tag tagBasic">
    All prices
  </span>
```

<br>
**You can also add actions to a tag by adding `<button>` sub-nodes.**

`tagClose` will toggle the visibility of the tag and also trigger a `tag:close` event.

`tagAction` will trigger a `tag:action` event.


```html_example
  <span class="tag tagBasic">
    <button class="tagAction" role="put your important role here">All prices</button>
    <button class="tagClose tagCloseBasic" role="close">&times</button>
  </span>

  <span class="tag tagBasic">
    <button class="tagAction tagActionHighlight" role="put your important role here">More Filters <i class="iconCog"></i></button>
  </span>

```

*/


// TagSkins MIxin
@mixin ooTagSkins() {
  // Make it a button so it's focusable
  %tagAccessiblity {
    border: none;
    cursor: pointer;
    background-color: transparent;
  }
    
  .tagBasic {
    border-color: $tagBasicBorderColor;
    background-color: $tagBasicBackgroundColor;
  }
    
  .tagAction {
    @extend %tagAccessiblity;
    padding: 0 0; // overwrite default button padding
    
    &:hover {
      text-decoration: underline;
    }
  }
    
  .tagActionHighlight {
    @extend %tagAccessiblity;
    padding: 0 0; // overwrite default button padding
    color: $linkColor;
    
    &:hover {
      text-decoration: underline;
      color: $linkHoverColor;
    }
  }
    
  .tagClose {
    @extend %tagAccessiblity;
    padding: 0 3px;
  }
    
  .tagCloseBasic {
    color: $tagCloseColor;
    margin-left: 5px; //add some space between action and close
    
    &:hover {
      color: $baseTypeColor;
    }
  }
    
  .tagCloseHighlight {
    color: $linkColor;
  
    &:hover {
      color: $linkHoverColor;
    }
  }
}
